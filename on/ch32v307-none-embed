#This is meant to use the GCC package provided by mounriver (MounRiverStudio_Linux_X64_V220 available at https://www.mounriver.com/download)

#define toolchain
set(CMAKE_SYSTEM_NAME               Generic)

# Some default GCC settings
# riscv-none-embed- must be part of path environment
set(TOOLCHAIN_PREFIX                riscv-none-embed-)
set(FLAGS                           "-fdata-sections -ffunction-sections -Wl,--gc-sections")
set(CPP_FLAGS                       "${FLAGS} -fno-rtti -fno-exceptions -fno-threadsafe-statics")

set(CMAKE_C_FLAGS                   ${FLAGS})
set(CMAKE_CXX_FLAGS                 ${CPP_FLAGS})

set(CMAKE_C_COMPILER                ${TOOLCHAIN_PREFIX}gcc)
set(CMAKE_ASM_COMPILER              ${CMAKE_C_COMPILER})
set(CMAKE_CXX_COMPILER              ${TOOLCHAIN_PREFIX}g++)
#set(CMAKE_OBJCOPY                   ${TOOLCHAIN_PREFIX}objcopy)
set(CMAKE_SIZE                      ${TOOLCHAIN_PREFIX}size)
set(CMAKE_AR                        ${TOOLCHAIN_PREFIX}ar)
set(CMAKE_AR_O_EXT                  "obj")

set(CMAKE_EXECUTABLE_SUFFIX_ASM     ".elf")
set(CMAKE_EXECUTABLE_SUFFIX_C       ".elf")
set(CMAKE_EXECUTABLE_SUFFIX_CXX     ".elf")

set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)

set(CMAKE_SYSTEM_PROCESSOR riscv32)

# Core MCU flags, CPU, instruction set and FPU setup
set(cpu_PARAMS ${cpu_PARAMS}
  -mabi=ilp32
  -march=rv32i
)



#define device specific accessors
set(LFTL_ACCESSORS ${CMAKE_CURRENT_LIST_DIR}/../target/ch32v307/ch32v307-accessors.c)
set(LFTL_ACCESSORS_INCLUDES
	${CMAKE_CURRENT_SOURCE_DIR}/target/ch32v307
)
add_definitions(-DLFTL_CH32V307)
